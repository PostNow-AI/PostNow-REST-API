# Generated by Django 5.2.4 on 2025-07-29 21:19

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CreatorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_platform', models.CharField(choices=[('instagram', 'Instagram'), ('linkedin', 'LinkedIn'), ('youtube', 'YouTube'), ('tiktok', 'TikTok'), ('twitter', 'Twitter/X')], max_length=20, verbose_name='Plataforma Principal')),
                ('niche', models.CharField(help_text='Ex: Marketing jurídico, Consultoria empresarial', max_length=200, verbose_name='Nicho de Atuação')),
                ('experience_level', models.CharField(choices=[('beginner', 'Iniciante'), ('intermediate', 'Intermediário'), ('advanced', 'Avançado')], max_length=20, verbose_name='Nível de Experiência')),
                ('primary_goal', models.CharField(choices=[('authority', 'Construir Autoridade'), ('leads', 'Gerar Leads'), ('education', 'Educar Audiência'), ('networking', 'Fazer Networking'), ('other', 'Outros')], max_length=20, verbose_name='Objetivo Principal')),
                ('time_available', models.CharField(choices=[('1-5', '1-5 horas'), ('6-15', '6-15 horas'), ('16+', '16+ horas')], max_length=10, verbose_name='Tempo Disponível por Semana')),
                ('specific_profession', models.CharField(blank=True, help_text='Ex: Advogado tributarista, Coach executivo', max_length=200, null=True, verbose_name='Profissão Específica')),
                ('target_audience', models.CharField(blank=True, help_text='Ex: Pequenas empresas, Pessoas físicas', max_length=200, null=True, verbose_name='Público-alvo')),
                ('communication_tone', models.CharField(blank=True, choices=[('formal', 'Formal'), ('casual', 'Casual'), ('educational', 'Educacional'), ('inspirational', 'Inspiracional')], max_length=20, null=True, verbose_name='Tom de Comunicação')),
                ('expertise_areas', models.JSONField(blank=True, default=list, help_text='Lista de áreas de especialização', verbose_name='Áreas de Expertise')),
                ('preferred_duration', models.CharField(blank=True, choices=[('short', 'Conteúdo Curto'), ('medium', 'Conteúdo Médio'), ('long', 'Conteúdo Longo')], max_length=20, null=True, verbose_name='Duração Preferida')),
                ('complexity_level', models.CharField(blank=True, choices=[('basic', 'Básico'), ('intermediate', 'Intermediário'), ('advanced', 'Avançado')], max_length=20, null=True, verbose_name='Nível de Complexidade')),
                ('theme_diversity', models.IntegerField(blank=True, help_text='Escala 0-10 (foco vs. variedade)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Diversidade de Temas')),
                ('publication_frequency', models.CharField(blank=True, choices=[('daily', 'Diária'), ('weekly', 'Semanal'), ('monthly', 'Mensal')], max_length=20, null=True, verbose_name='Frequência de Publicação')),
                ('instagram_username', models.CharField(blank=True, max_length=100, null=True, verbose_name='Instagram Username')),
                ('linkedin_url', models.URLField(blank=True, null=True, verbose_name='LinkedIn Profile URL')),
                ('twitter_username', models.CharField(blank=True, max_length=100, null=True, verbose_name='Twitter/X Username')),
                ('tiktok_username', models.CharField(blank=True, max_length=100, null=True, verbose_name='TikTok Username')),
                ('revenue_stage', models.CharField(blank=True, choices=[('starting', 'Começando'), ('growing', 'Crescendo'), ('scaling', 'Escalando')], max_length=20, null=True, verbose_name='Estágio de Receita')),
                ('team_size', models.CharField(blank=True, choices=[('solo', 'Solo'), ('small_team', 'Pequena Equipe'), ('company', 'Empresa')], max_length=20, null=True, verbose_name='Tamanho da Equipe')),
                ('revenue_goal', models.CharField(blank=True, help_text='Ex: R$ 50k/mês', max_length=100, null=True, verbose_name='Meta de Receita')),
                ('authority_goal', models.CharField(blank=True, help_text='Ex: 1000+ conexões qualificadas', max_length=100, null=True, verbose_name='Meta de Autoridade')),
                ('leads_goal', models.CharField(blank=True, help_text='Ex: 2-3 leads/mês via conteúdo', max_length=100, null=True, verbose_name='Meta de Leads')),
                ('has_designer', models.BooleanField(default=False, verbose_name='Tem Designer')),
                ('current_tools', models.JSONField(blank=True, default=list, help_text='Lista de ferramentas utilizadas', verbose_name='Ferramentas Atuais')),
                ('tools_budget', models.CharField(blank=True, help_text='Ex: R$ 200-500/mês', max_length=100, null=True, verbose_name='Orçamento para Ferramentas')),
                ('preferred_hours', models.JSONField(blank=True, default=list, help_text='Lista de horários preferenciais', verbose_name='Horários Preferenciais')),
                ('onboarding_completed', models.BooleanField(default=False, help_text='Indica se os campos obrigatórios foram preenchidos', verbose_name='Onboarding Completado')),
                ('completeness_percentage', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Percentual de Completude')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('onboarding_completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Data de Conclusão do Onboarding')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='creator_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil do Criador',
                'verbose_name_plural': 'Perfis dos Criadores',
            },
        ),
        migrations.CreateModel(
            name='UserBehavior',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ideas_selected', models.JSONField(default=list, help_text='Lista de IDs das ideias selecionadas pelo usuário', verbose_name='Ideias Selecionadas')),
                ('ideas_rejected', models.JSONField(default=list, help_text='Lista de IDs das ideias rejeitadas pelo usuário', verbose_name='Ideias Rejeitadas')),
                ('avg_time_per_idea', models.FloatField(default=0.0, help_text='Tempo médio em segundos analisando cada ideia', verbose_name='Tempo Médio por Ideia')),
                ('preferred_topics', models.JSONField(default=list, help_text='Lista de tópicos preferidos baseados no comportamento', verbose_name='Tópicos Preferidos')),
                ('preferred_complexity', models.IntegerField(default=5, help_text='Escala 1-10 baseada no comportamento', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Complexidade Preferida')),
                ('preferred_length', models.CharField(choices=[('short', 'Curto'), ('medium', 'Médio'), ('long', 'Longo')], default='medium', max_length=20, verbose_name='Comprimento Preferido')),
                ('peak_hours', models.JSONField(default=list, help_text='Horários de maior uso baseados no comportamento', verbose_name='Horários de Pico')),
                ('usage_frequency', models.CharField(choices=[('daily', 'Diário'), ('weekly', 'Semanal'), ('monthly', 'Mensal')], default='weekly', max_length=20, verbose_name='Frequência de Uso')),
                ('avg_session_duration', models.FloatField(default=0.0, help_text='Duração média da sessão em minutos', verbose_name='Duração Média da Sessão')),
                ('total_interactions', models.IntegerField(default=0, verbose_name='Total de Interações')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Última Atividade')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='behavior_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comportamento do Usuário',
                'verbose_name_plural': 'Comportamentos dos Usuários',
            },
        ),
    ]
